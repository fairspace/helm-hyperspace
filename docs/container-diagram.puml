@startuml Hyperspace
!includeurl https://raw.githubusercontent.com/RicardoNiepel/C4-PlantUML/release/1-0/C4_Container.puml

title Container diagram for Hyperspace

LAYOUT_WITH_LEGEND()

Person(admin, "Administrator", "An organisation wide administrator for fairspace")

System_Boundary(hyperspace, "Hyperspace") {
    Container(keycloak, "Keycloak", "Java, WildFly", "Handles authentication and authorization")
    Container(elasticsearch, "ElasticSearch", "Java", "Search index for information from all connected workspaces")
    Container(frontend, "Frontend", "Javascript, React", "Allows administrators to manage workspaces, apps and users")
    Container(pluto, "API gateway", "Java, Spring Boot", "Proxies API requests and keeps authenticated session")
    Container(portal, "Portal", "Java, Jetty, Apache Spark", "Provides APIs for managing workspaces and apps")
    Container(rabbitmq, "Message Bus", "RabbitMQ", "Transport for business events")
    Container(auditlog, "Log aggregator", "Java", "Stores relevant business events in a separate audit log")
}

System_Ext(k8s, "Kubernetes", "Platform for managing containerized workloads and services")
System_Ext(tiller, "Tiller", "Server side component managing helm releases")

Rel(tiller, k8s, "Manages resources and stores releases in")

Rel(admin, frontend, "Manages workspaces and apps")
Rel(admin, keycloak, "Logs in at ")

Rel(frontend, pluto, "Updates workspace, app and auth information via")
Rel_R(pluto, keycloak, "Proxies admin API on")
Rel(pluto, portal, "Proxies workspace, app and search API on")
Rel_L(pluto, rabbitmq, "Sends authentication events to", "AMQP")
Rel(portal, tiller, "Manages releases with")
Rel(portal, elasticsearch, "Queries appropriate indices")
Rel(portal, rabbitmq, "Sends workspace and app events to", "AMQP")
Rel_R(auditlog, rabbitmq, "Listens to events from", "AMQP")
@enduml
