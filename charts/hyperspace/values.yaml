# The fairspace container images are in a private repository
# See https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
# on how to store and specify the credentials for it
fairspaceImagePullSecret:

# Setup ingress for hyperspace components
hyperspace:
    name: Fairspace
    rbac:
        enabled: true
    keycloak:
        clientId: hyperspace
        clientSecret:
        realm:
    ingress:
        enabled: true
        domain: ci.test.fairdev.app
        annotations:
            kubernetes.io/ingress.class: nginx
        tls:
            enabled: true
            secretNameOverride:
            certificate:
                obtain: true
                issuerRef:
                    name: letsencrypt-prod
                    kind: ClusterIssuer

    # Scripts for setting up keycloak for hyperspace
    configurationScripts:
        keycloak:
            dockerRepository: eu.gcr.io
            image: fairspace-207108/keycloak-configuration
            configurationScriptsTag: 0.1.5
            pullPolicy: IfNotPresent
            resources:
                requests:
                    cpu: "50m"
                    memory: "512Mi"
                limits:
                    cpu: "1"
                    memory: "2048Mi"
        rabbitmq:
            dockerRepository: eu.gcr.io
            image: fairspace-207108/rabbitmq-configuration
            configurationScriptsTag: 0.1.2
            pullPolicy: IfNotPresent
            resources:
                requests:
                    cpu: "50m"
                    memory: "512Mi"
                limits:
                    cpu: "1"
                    memory: "2048Mi"
    organisationadmin:
        username:
        password: fairspace123
    testuser:
        generate: false
        password:
    locationOverrides: {}

# Keycloak configuration
keycloak:
    enabled: true
    keycloak:
        username: keycloak
        service:
            type: ClusterIP
            port: 80
        ingress:
            enabled: false
        resources:
            requests:
                cpu: "10m"
                memory: "600Mi"
            limits:
                cpu: "500m"
                memory: "2048Mi"
    postgresql:
        persistence:
            enabled: true
        resources:
            # Request values are set by default in postgresql chart
            limits:
                cpu: "500m"
                memory: "512Mi"

#################################################
# RabbitMQ configuration
#################################################
rabbitmq:
    enabled: true
    expose: true
    ingress:
        enabled: false
    persistence:
        enabled: true
    service:
        managerPort: 15672
    rabbitmq:
        username: rabbitmq
    user:
        username: hyperspace
        password:

#####################################################################
# Specific settings for ElasticSearch
#####################################################################
elasticsearch:
    enabled: true
    persistence:
        enabled: true
        size: 20Gi
        storageClass: standard
    client:
        resources:
            requests:
                memory: "800Mi"
                cpu: 0.1
            limits:
                memory: "1024Mi"
                cpu: 1
        initResources:
            limits:
                cpu: "25m"
                memory: "128Mi"
            requests:
                cpu: "25m"
                memory: "128Mi"
    data:
        exposeHttp: true
        resources:
            requests:
                memory: "1600Mi"
                cpu: 0.1
            limits:
                memory: "2048Mi"
                cpu: 1
        initResources:
            limits:
                cpu: "25m"
                memory: "128Mi"
            requests:
                cpu: "25m"
                memory: "128Mi"
    master:
        resources:
            requests:
                memory: "800Mi"
                cpu: 0.1
            limits:
                memory: "1024Mi"
                cpu: 1
        initResources:
            limits:
                cpu: "25m"
                memory: "128Mi"
            requests:
                cpu: "25m"
                memory: "128Mi"

# Generic settings for tracing
tracing:
    enabled: true
    samplingRate: 0.1
    baseUrl: http://jaeger-collector.jaeger:9411

#####################################################################
# Specific settings for Pluto subchart
# Default configuration points to organisation portal
#####################################################################
pluto:
    replicaCount: 1
    rollingUpdate:
        maxUnavailable: 25%
        maxSurge: 25%
    image:
        image: eu.gcr.io/fairspace-207108/pluto
        tag: 0.6.9
        pullPolicy: IfNotPresent
    service:
        type: ClusterIP
        externalPort: 80
        internalPort: 8080
    resources:
        limits:
            cpu: 1
            memory: 1024Mi
        requests:
            cpu: 50m
            memory: 300Mi
    probePath: /actuator/health
    livenessProbe:
        initialDelaySeconds: 20
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
    readinessProbe:
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
    terminationGracePeriodSeconds: 10

    # Keycloak configuration for authentication
    # See also hyperspace.keycloak.clientId and hyperspace.keycloak.clientSecret
    keycloak:
        redirectAfterLogoutUrl:

    # Where to find the backends for this proxy
    backends:
      portal:
      keycloak:
      frontend:

    # Zuul timeouts when connecting to upstream services
    socketTimeoutMillis: 15000
    connectTimeoutMillis: 2000

#####################################################################
# Default configuration points to organisation portal
#####################################################################
portal:
    replicaCount: 1
    rollingUpdate:
        maxUnavailable: 25%
        maxSurge: 25%
    image:
        image: eu.gcr.io/fairspace-207108/portal
        tag: RELEASEVERSION
        pullPolicy: IfNotPresent
    service:
        type: ClusterIP
        externalPort: 80
        internalPort: 8080
    resources:
        limits:
            cpu: 1
            memory: 1024Mi
        requests:
            cpu: 50m
            memory: 300Mi
    probePath: /api/v1/health
    livenessProbe:
        initialDelaySeconds: 20
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
    readinessProbe:
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
    terminationGracePeriodSeconds: 10
    charts:
      workspace:
        repo: http://storage.googleapis.com/fairspace-helm/
        file: workspace-0.6.7.tgz
      jupyter:
        repo: http://storage.googleapis.com/fairspace-helm/
        file: jupyter-0.7.1.tgz
    mail:
        mail.from: info@fairspace.io
        mail.user: user
        mail.password: password
        mail.transport.protocol: smtp
        mail.smtp.auth: true
        mail.smtp.host: host
        mail.smtp.port: 587
        mail.smtp.starttls.enable: true

#####################################################################
# Specific settings for Frontend subchart
#####################################################################
frontend:
    replicaCount: 1
    image:
        image: eu.gcr.io/fairspace-207108/frontend
        tag: RELEASEVERSION
        pullPolicy: IfNotPresent
    service:
        type: ClusterIP
        externalPort: 80
        internalPort: 80
    resources:
        limits:
            cpu: 200m
            memory: 128Mi
        requests:
            cpu: 100m
            memory: 64Mi
    probePath: /
    livenessProbe:
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
    readinessProbe:
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
    terminationGracePeriodSeconds: 10

#####################################################################
# Specific settings for Log Aggregator
#####################################################################
logaggregator:
    replicaCount: 1
    rollingUpdate:
        maxUnavailable: 25%
        maxSurge: 25%
    image:
        image: eu.gcr.io/fairspace-207108/logaggregator
        tag: RELEASEVERSION
        pullPolicy: IfNotPresent
    service:
        type: ClusterIP
        externalPort: 80
        internalPort: 8080
    resources:
        limits:
            cpu: 1
            memory: 1024Mi
        requests:
            cpu: 50m
            memory: 300Mi
    persistence:
        logs:
            ## A manually managed Persistent Volume and Claim
            ## If defined, PVC must be created manually before volume will be bound
            # existingClaim:

            ## Logs data Persistent Volume Storage Class
            ## If defined, storageClassName: <storageClass>
            ## If set to "-", storageClassName: "", which disables dynamic provisioning
            ## If undefined (the default) or set to null, no storageClassName spec is
            ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
            ##   GKE, AWS & OpenStack)
            ##
            # storageClass: "-"
            accessMode: ReadWriteOnce
            size: 50Gi
            mountPath: /data
    events:
        ## workspace.category.eventType
        routingKeyWildcards:
            - "*.*.*"
podAnnotations: {}
